syntax = "proto3";

package com.tankit.asset;

option java_package = "com.tankit.asset.proto";
option java_multiple_files = true;
option java_outer_classname = "AssetServiceProto";

// Asset definition
message Asset {
  string asset_id = 1;
  string name = 2;
  string description = 3;
  string cusip = 4;
  string bloomberg_id = 5;
  string isin = 6;
  string sedol = 7;
  int64 created_timestamp = 8;
  double market_value = 9;
  string currency = 10;
}

// Request for multiple assets
message AssetRequest {
  repeated string asset_ids = 1;
  int32 batch_size = 2;
}

// Response containing assets
message AssetResponse {
  repeated Asset assets = 1;
  int32 total_found = 2;
  int32 total_requested = 3;
  string server_instance = 4;
  int64 processing_time_ms = 5;
}

// Health check messages
message HealthCheckRequest {
  string service = 1;
}

message HealthCheckResponse {
  enum ServingStatus {
    UNKNOWN = 0;
    SERVING = 1;
    NOT_SERVING = 2;
    SERVICE_UNKNOWN = 3;
  }
  ServingStatus status = 1;
}

// Asset service definition
service AssetService {
  // Get assets by IDs with streaming response
  rpc GetAssets(AssetRequest) returns (stream AssetResponse);
  
  // Health check
  rpc Check(HealthCheckRequest) returns (HealthCheckResponse);
  
  // Asset inter-service communication
  rpc GetAssetsInternal(AssetRequest) returns (AssetResponse);
}